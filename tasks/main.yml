---
- name: Load var file with package names based on the OS type
  ansible.builtin.include_vars:
    file: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Install ClamAV packages
  ansible.builtin.package:
    name: "{{ package_names }}"
    state: present

- name: Install shell script to be run by cron
  ansible.builtin.template:
    dest: /usr/local/share/virus_scan.sh
    mode: 0755
    src: virus_scan.sh.j2

- name: Install virus_scan cron job as {{ clamav_cron_frequency }}
  ansible.builtin.cron:
    cron_file: virus_scan
    job: /usr/local/share/virus_scan.sh
    name: virus_scan
    special_time: "{{ clamav_cron_frequency }}"
    user: root
  when: clamav_cron_frequency != "custom"

- name: Install custom virus_scan cron job
  ansible.builtin.cron:
    cron_file: virus_scan
    day: "{{ clamav_cron_custom.day }}"
    hour: "{{ clamav_cron_custom.hour }}"
    job: "{{ clamav_cron_custom.job }}"
    minute: "{{ clamav_cron_custom.minute }}"
    month: "{{ clamav_cron_custom.month }}"
    name: virus_scan
    user: root
    weekday: "{{ clamav_cron_custom.weekday }}"
  when: clamav_cron_frequency == "custom"

- name: Ensure that log folder exists
  ansible.builtin.file:
    mode: 0755
    path: /var/log/clamav
    state: directory

- name: Ensure log file will be world-readable
  block:
    - name: Ensure log file will be world-readable (not Fedora)
      ansible.builtin.file:
        access_time: preserve
        mode: 0644
        modification_time: preserve
        path: /var/log/clamav/lastscan.log
        state: touch
      when: ansible_distribution != "Fedora"

    # Fedora has SELinux enabled, and if this module actually creates
    # the file it needs to do so with the correct values for the
    # seuser, serole, setype, and selevel.  This is so that the
    # clamscan process (which runs as antivirus_t) can access the
    # file.
    #
    # I determined the correct values to use by running restorecon on
    # /var/log/clamav/lastscan.log on a live system.
    - name: Ensure log file will be world-readable (Fedora)
      ansible.builtin.file:
        access_time: preserve
        mode: 0644
        modification_time: preserve
        path: /var/log/clamav/lastscan.log
        selevel: s0
        serole: object_r
        setype: antivirus_log_t
        seuser: system_u
        state: touch
      when: ansible_distribution == "Fedora"

- name: "Set SELinux flag persistently ({{ clamav_seboolean_name }})"
  ansible.posix.seboolean:
    name: "{{ clamav_seboolean_name }}"
    persistent: true
    state: "{{ clamav_seboolean_state }}"
  when:
    - ansible_selinux.status == "enabled"

- name: Ensure configuration for freshclam
  ansible.builtin.include_tasks:
    file: configure.yml
  vars:
    task_conf_file: "{{ freshclam_configuration_path }}"
    task_conf_parameters: "{{ clamav_freshclam_configuration }}"
    task_conf_service: freshclam
  when: clamav_freshclam_configuration

- name: Ensure configuration for clamd
  ansible.builtin.include_tasks:
    file: configure.yml
  vars:
    task_conf_file: "{{ clamd_configuration_path }}"
    task_conf_parameters: "{{ clamav_clamd_configuration }}"
    task_conf_service: clamd
  when: clamav_clamd_configuration

# We need to flush handlers as configuration changes might be necessary
# to pass the wait_for signatures test.
- name: Flush possible pending handlers
  ansible.builtin.meta: flush_handlers

- name: Ensure that quarantine folder exists
  ansible.builtin.file:
    group: "{{ clamav_scan_quarantine_group }}"
    mode: "{{ clamav_scan_quarantine_mode }}"
    owner: "{{ clamav_scan_quarantine_owner }}"
    path: "{{ clamav_scan_quarantine_directory }}"
    state: directory
  when: clamav_scan_copy or clamav_scan_move | bool

- name: Load tasks file for systemd setup
  ansible.builtin.include_tasks:
    file: setup_systemd.yml
  when: ansible_service_mgr == "systemd"

- name: Load tasks file for manual setup
  ansible.builtin.include_tasks:
    file: setup_manual.yml
  when: ansible_service_mgr != "systemd"

- name: Wait for new signatures to be downloaded and installed by freshclam
  ansible.builtin.wait_for:
    path: /var/lib/clamav/bytecode.cvd
    state: present
    timeout: 600
