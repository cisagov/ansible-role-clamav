---
- name: Load tasks file for adding kali-dev package repo for Kali
  ansible.builtin.include_tasks:
    file: setup_Kali.yml
  when:
    - ansible_os_family == "Debian"
    - ansible_distribution == "Kali"

- name: Load var file with package names based on the OS type
  ansible.builtin.include_vars:
    file: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}_{{ ansible_distribution_release }}.yml"
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "{{ role_path }}/vars"

- name: Install ClamAV packages
  ansible.builtin.package:
    name: "{{ package_names }}"
    state: present

- name: Install virus_scan cron job
  ansible.builtin.template:
    dest: /etc/cron.{{ clamav_cron_frequency }}/virus_scan
    mode: 0755
    src: virus_scan.sh.j2

- name: Ensure that log folder exists
  ansible.builtin.file:
    mode: 0755
    path: /var/log/clamav
    state: directory

- name: Ensure log file will be world-readable
  block:
    - name: Ensure log file will be world-readable (not Fedora)
      ansible.builtin.file:
        access_time: preserve
        mode: 0644
        modification_time: preserve
        path: /var/log/clamav/lastscan.log
        state: touch
      when: ansible_distribution != "Fedora"

    # Fedora has SELinux enabled, and if this module actually creates
    # the file it needs to do so with the correct values for the
    # seuser, serole, setype, and selevel.  This is so that the
    # clamscan process (which runs as antivirus_t) can access the
    # file.
    #
    # I determined the correct values to use by running restorecon on
    # /var/log/clamav/lastscan.log on a live system.
    - name: Ensure log file will be world-readable (Fedora)
      ansible.builtin.file:
        access_time: preserve
        mode: 0644
        modification_time: preserve
        path: /var/log/clamav/lastscan.log
        selevel: s0
        serole: object_r
        setype: antivirus_log_t
        seuser: system_u
        state: touch
      when: ansible_distribution == "Fedora"

- name: Configure SELinux to allow freshclam downloads and file system scan
  block:
    - name: Generate SELinux policy for freshclam
      ansible.builtin.shell:
        cmd: grep freshclam /var/log/audit/audit.log | audit2allow -M freshclam

    - name: Apply SELinux policy for freshclam
      ansible.builtin.command:
        cmd: semodule --install freshclam.pp

    - name: Set SELinux antivirus_can_scan_system flag persistently
      ansible.posix.seboolean:
        name: antivirus_can_scan_system
        persistent: yes
        state: yes
  when:
    - ansible_selinux.status == "enabled"

- name: Ensure configuration for freshclam
  ansible.builtin.include_tasks:
    file: configure.yml
  vars:
    task_conf_file: "{{ freshclam_configuration_path }}"
    task_conf_parameters: "{{ clamav_freshclam_configuration }}"
  when: clamav_freshclam_configuration

- name: Ensure configuration for clamd
  ansible.builtin.include_tasks:
    file: configure.yml
  vars:
    task_conf_file: "{{ clamd_configuration_path }}"
    task_conf_parameters: "{{ clamav_clamd_configuration }}"
  when: clamav_clamd_configuration

- name: Ensure that quarantine folder exists
  ansible.builtin.file:
    group: "{{ clamav_scan_quarantine_group }}"
    mode: "{{ clamav_scan_quarantine_mode }}"
    owner: "{{ clamav_scan_quarantine_owner }}"
    path: "{{ clamav_scan_quarantine_directory }}"
    state: directory
  when: clamav_scan_copy or clamav_scan_move | bool

- name: Load tasks file for systemd setup
  ansible.builtin.include_tasks:
    file: setup_systemd.yml
  when: ansible_service_mgr == 'systemd'

- name: Load tasks file for manual setup
  ansible.builtin.include_tasks:
    file: setup_manual.yml
  when: ansible_service_mgr != 'systemd'

- name: Wait for new signatures to be downloaded and installed by freshclam
  ansible.builtin.wait_for:
    path: /var/lib/clamav/bytecode.cvd
    state: present
    timeout: 600
